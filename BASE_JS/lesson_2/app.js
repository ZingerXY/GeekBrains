'use strict'

/**
 * 1. Объясните почему код даёт именно такие результаты ?
 */

//пример 1
let a = 1,
	b = 1,
	c, d;
c = ++a;
// alert(c); // ответ: 2

/**
 * МОЙ КОММЕНТАРИЙ
 * Сначала для переменной а выполняется префиксный инкремент
 * затем в с записывается увеличеное на 1 значение а
 */


//пример 2
d = b++;
// alert(d); //ответ: 1

/**
 * МОЙ КОММЕНТАРИЙ
 * Сначала в d записывается изначальное значение b
 * и только потом выполняется инкремент
 * поэтому значение d равно значению b до инкремента
 */


//пример 3
c = 2 + ++a;
// alert(c); //ответ: 5

/**
 * МОЙ КОММЕНТАРИЙ
 * в примере 1 а было увеличено на 1 и равняется 2 
 * теперь оно увеличивается еще на 1 префиксным инкрементом 
 * который выполняется перед операцией сложения
 * итого в с записывается 2 + 3 = 5
 */


//пример 4
d = 2 + b++;
// alert(d); //ответ: 4
// alert(a); //3
// alert(b); //3

/**
 * МОЙ КОММЕНТАРИЙ
 * тут b увеличеное на 1 в примере 2 складывается с 2 
 * и записывается в d 2 + 2 = 4
 * a равно 3 потому, что в примере 1 и 3 оно было увеличено на 1
 * b равно 3 потому, что в примере 2 и 4 оно было увеличено на 1
 */


/**
 * 2. Чему будут равны переменные x и a в примере ниже ? 
 * Написать почему так произошло(описать последовательность действий).
 */

a = 2;
let x = 1 + (a *= 2);

/**
 * МОЙ КОММЕНТАРИЙ
 * в скобках к переменной применяется совмещенный оператор умножения на 2
 * скобки возвращают результирующее значение а равное 4
 * далее к 1 прибавляется значение а равное 4
 * в итоге x будет равен 5
 */


/**
 * 3. Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
 * Затем написать скрипт, который работает по следующему принципу:
 * -если a и b положительные, вывести их разность(ноль можно считать положительным числом); 
 * - если а и b отрицательные, вывести их произведение; 
 * - (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
 */

a = 3;
b = 6;

if (a >= 0 && b >= 0) {
	console.log(a - b);
} else if (a < 0 && b < 0) {
	console.log(a * b);
} else {
	console.log(a + b);
}

/**
 * 4. Реализовать основные 4 арифметические операции(+, -, /, *) в виде функций с двумя
 * параметрами.Т.е.например, функция для сложения должна принимать два числа, складывать
 * их и возвращать результат.Обязательно использовать оператор return.
 */

/**
 * Операция сложения
 * @param {number} a первое слагаемое
 * @param {number} b второе слагаемое
 * @returns {number} результат сложения
 */
let add = (a, b) => {
	return a + b;
};

/**
 * Операция разности
 * @param {number} a уменьшаемое
 * @param {number} b вычитаемое 
 * @returns {number} результат разности
 */
let diff = (a, b) => {
	return a - b;
};

/**
 * Операция деления
 * @param {number} a делимое
 * @param {number} b делитель
 * @returns {number} результат деления
 */
let div = (a, b) => {
	return a / b;
};

/**
 * Операция умножения
 * @param {number} a первый множитель
 * @param {number} b второй множитель
 * @returns {number} результат умножения
 */
let mult = (a, b) => {
	return a * b;
}

/**
 * 5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
 * где arg1, arg2– значения аргументов, operation– строка с названием операции.В зависимости от
 * переданного значения операции(использовать switch) выполнить одну из арифметических операций
 * (использовать функции из задания 4) и вернуть полученное значение
 */

/**
 * Выполение заданной математической операции над переддаными аргументами
 * @param {number} a первый аргумент
 * @param {number} b второй аргумент
 * @param {string} op математическая операция
 * @returns {number}
 */
let mathOperation = (a, b, op) => {
	switch (op) {
		case 'add':
			return add(a, b);
		case 'diff':
			return diff(a, b);
		case 'div':
			return div(a, b);
		case 'mult':
			return mult(a, b);
		default:
			console.error("Данная функция поддерживает только следующие операции: сложение (add), разность (diff), деление (div) и умножение (mult)");
	}
}

/**
 * 6. Программа должна спросить у пользователя число, это будет количество денег, которое он хочет
 * положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
 * "Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101. 
 * "Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020. 
 * "Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
 * То есть ваша задача выводить слово« рубль» в правильном падеже, в зависимости от введенного
 * числа.
 */

/**
 * Возвращает название валюты с правильным окнончинием
 * в зависимости от числа
 * @param {string} n число
 * @returns {string}
 */
let currencyName = (n) => {
	switch (n.slice(-1)) {
		case "1":
			return "рубль";
		case "2":
		case "3":
		case "4":
			return "рубля";
		default:
			return "рублей";
	}
}

/** Зачисляет деньги на счет и отображает колличество зачисленых денег */
let addAccount = () => {
	let money = prompt("Количество денег, которое необходимо положить на счет в банке", 0);
	alert("Ваша сумма в " + money + " " + currencyName(money) + " успешно зачислена.");
}

/** Добавляет на страницу кнопку "Положить деньги на счет" */
(() => {
	let addMoney = document.createElement("input");
	addMoney.type = "button";
	addMoney.value = "Положить деньги на счет";
	addMoney.onclick = addAccount;
	document.body.append(addMoney);
})();